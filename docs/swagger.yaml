basePath: /
definitions:
  handler.ErrEnvelope:
    properties:
      error:
        type: string
    type: object
  handler.MsgEnvelope:
    properties:
      message:
        type: string
    type: object
  model.Book:
    properties:
      author:
        type: string
      id:
        type: integer
      price:
        type: integer
      title:
        type: string
      version:
        type: integer
    type: object
  model.BookBorrow:
    properties:
      book_id:
        type: integer
      borrow_date:
        type: string
      borrow_id:
        type: integer
      return_date:
        type: string
      user_id:
        type: integer
      uuid:
        type: string
      version:
        type: integer
    type: object
  model.CreateBookBorrowRq:
    properties:
      book_id:
        minimum: 1
        type: integer
      borrow_date:
        type: string
      user_id:
        minimum: 1
        type: integer
    required:
    - book_id
    - borrow_date
    - user_id
    type: object
  model.CreateBookRq:
    properties:
      author:
        minLength: 5
        type: string
      price:
        minimum: 100
        type: integer
      title:
        minLength: 5
        type: string
    required:
    - author
    - price
    - title
    type: object
  model.CreateUserRq:
    properties:
      login:
        minLength: 5
        type: string
      password:
        minLength: 5
        type: string
      user_name:
        minLength: 5
        type: string
    required:
    - login
    - password
    - user_name
    type: object
  model.LogInRq:
    properties:
      login:
        minLength: 5
        type: string
      password:
        minLength: 5
        type: string
    required:
    - login
    - password
    type: object
  model.UpdateBookBorrowRq:
    properties:
      book_id:
        type: integer
      borrow_date:
        type: string
      return_date:
        type: string
      user_id:
        type: integer
    type: object
  model.UpdateBookRq:
    properties:
      author:
        type: string
      title:
        type: string
    type: object
  model.UpdateUserRq:
    properties:
      login:
        type: string
      user_name:
        type: string
    type: object
  model.User:
    properties:
      id:
        type: integer
      is_active:
        type: boolean
      login:
        type: string
      user_name:
        type: string
      version:
        type: integer
    type: object
host: localhost:8080
info:
  contact: {}
  description: Onelab project
  title: Onelab API
  version: "1.0"
paths:
  /book:
    post:
      consumes:
      - application/json
      description: Create a new book with the input payload
      parameters:
      - description: Book information
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/model.CreateBookRq'
      produces:
      - application/json
      responses:
        "201":
          description: Book created
          schema:
            $ref: '#/definitions/handler.MsgEnvelope'
        "400":
          description: bad request
          schema:
            $ref: '#/definitions/handler.ErrEnvelope'
        "422":
          description: book already exist
          schema:
            $ref: '#/definitions/handler.ErrEnvelope'
        "500":
          description: internal server error
          schema:
            $ref: '#/definitions/handler.ErrEnvelope'
      summary: Create a new book
      tags:
      - book
  /book/{id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: Book ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: book deleted
          schema:
            $ref: '#/definitions/handler.MsgEnvelope'
        "400":
          description: bad request
          schema:
            $ref: '#/definitions/handler.ErrEnvelope'
        "401":
          description: missing or malformed jwt
          schema:
            $ref: '#/definitions/handler.ErrEnvelope'
        "404":
          description: book is not exist
          schema:
            $ref: '#/definitions/handler.ErrEnvelope'
        "500":
          description: internal server error
          schema:
            $ref: '#/definitions/handler.ErrEnvelope'
      summary: Delete book by id
      tags:
      - book
    get:
      consumes:
      - application/json
      description: Get book by id in query param
      parameters:
      - description: Book ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "302":
          description: Found
          schema:
            $ref: '#/definitions/model.Book'
        "400":
          description: bad request
          schema:
            $ref: '#/definitions/handler.ErrEnvelope'
        "401":
          description: missing or malformed jwt
          schema:
            $ref: '#/definitions/handler.ErrEnvelope'
        "404":
          description: book is not exist
          schema:
            $ref: '#/definitions/handler.ErrEnvelope'
        "500":
          description: internal server error
          schema:
            $ref: '#/definitions/handler.ErrEnvelope'
      summary: Get book by id
      tags:
      - book
    patch:
      consumes:
      - application/json
      parameters:
      - description: Book ID
        in: path
        name: id
        required: true
        type: integer
      - description: Book information
        in: body
        name: input
        schema:
          $ref: '#/definitions/model.UpdateBookRq'
      produces:
      - application/json
      responses:
        "200":
          description: book updated
          schema:
            $ref: '#/definitions/handler.MsgEnvelope'
        "400":
          description: bad request
          schema:
            $ref: '#/definitions/handler.ErrEnvelope'
        "401":
          description: missing or malformed jwt
          schema:
            $ref: '#/definitions/handler.ErrEnvelope'
        "404":
          description: book is not exist
          schema:
            $ref: '#/definitions/handler.ErrEnvelope'
        "409":
          description: edit conflict
          schema:
            $ref: '#/definitions/handler.ErrEnvelope'
        "500":
          description: internal server error
          schema:
            $ref: '#/definitions/handler.ErrEnvelope'
      summary: Update book by id
      tags:
      - book
  /book/borrow:
    post:
      consumes:
      - application/json
      description: Create a new book borrow with the input payload
      parameters:
      - description: Book borrow information time:2020-04-17T18:25:43.511Z
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/model.CreateBookBorrowRq'
      produces:
      - application/json
      responses:
        "201":
          description: record created
          schema:
            $ref: '#/definitions/handler.MsgEnvelope'
        "400":
          description: bad request
          schema:
            $ref: '#/definitions/handler.ErrEnvelope'
        "500":
          description: internal server error
          schema:
            $ref: '#/definitions/handler.ErrEnvelope'
      summary: Create a new book borrow
      tags:
      - book_borrow
  /book/borrow/{id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: BookBorrow ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: record deleted
          schema:
            $ref: '#/definitions/handler.MsgEnvelope'
        "400":
          description: bad request
          schema:
            $ref: '#/definitions/handler.ErrEnvelope'
        "401":
          description: missing or malformed jwt
          schema:
            $ref: '#/definitions/handler.ErrEnvelope'
        "404":
          description: record is not exist
          schema:
            $ref: '#/definitions/handler.ErrEnvelope'
        "500":
          description: internal server error
          schema:
            $ref: '#/definitions/handler.ErrEnvelope'
      summary: Delete book borrow record by id
      tags:
      - book_borrow
    get:
      consumes:
      - application/json
      description: Get borrow record by id in query param
      parameters:
      - description: BookBorrow ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "302":
          description: Found
          schema:
            $ref: '#/definitions/model.BookBorrow'
        "400":
          description: bad request
          schema:
            $ref: '#/definitions/handler.ErrEnvelope'
        "401":
          description: missing or malformed jwt
          schema:
            $ref: '#/definitions/handler.ErrEnvelope'
        "404":
          description: record is not exist
          schema:
            $ref: '#/definitions/handler.ErrEnvelope'
        "500":
          description: internal server error
          schema:
            $ref: '#/definitions/handler.ErrEnvelope'
      summary: Get Borrow record by id
      tags:
      - book_borrow
    patch:
      consumes:
      - application/json
      parameters:
      - description: BookBorrow ID
        in: path
        name: id
        required: true
        type: integer
      - description: record update information
        in: body
        name: input
        schema:
          $ref: '#/definitions/model.UpdateBookBorrowRq'
      produces:
      - application/json
      responses:
        "200":
          description: record updated
          schema:
            $ref: '#/definitions/handler.MsgEnvelope'
        "400":
          description: bad request
          schema:
            $ref: '#/definitions/handler.ErrEnvelope'
        "401":
          description: missing or malformed jwt
          schema:
            $ref: '#/definitions/handler.ErrEnvelope'
        "404":
          description: record is not exist
          schema:
            $ref: '#/definitions/handler.ErrEnvelope'
        "409":
          description: edit conflict
          schema:
            $ref: '#/definitions/handler.ErrEnvelope'
        "500":
          description: internal server error
          schema:
            $ref: '#/definitions/handler.ErrEnvelope'
      summary: Update book borrow by id
      tags:
      - book_borrow
  /login:
    post:
      consumes:
      - application/json
      description: Login user
      parameters:
      - description: User login input
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/model.LogInRq'
      produces:
      - application/json
      responses:
        "200":
          description: logined
          schema:
            $ref: '#/definitions/handler.MsgEnvelope'
        "400":
          description: bad request
          schema:
            $ref: '#/definitions/handler.ErrEnvelope'
        "401":
          description: unauthorized
          schema:
            $ref: '#/definitions/handler.ErrEnvelope'
        "500":
          description: internal server error
          schema:
            $ref: '#/definitions/handler.ErrEnvelope'
      summary: Login user
      tags:
      - user
  /user:
    post:
      consumes:
      - application/json
      description: Create a new user with the input payload
      parameters:
      - description: User information
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/model.CreateUserRq'
      produces:
      - application/json
      responses:
        "201":
          description: user created
          schema:
            $ref: '#/definitions/handler.MsgEnvelope'
        "400":
          description: bad request
          schema:
            $ref: '#/definitions/handler.ErrEnvelope'
        "422":
          description: user already exist
          schema:
            $ref: '#/definitions/handler.ErrEnvelope'
        "500":
          description: internal server error
          schema:
            $ref: '#/definitions/handler.ErrEnvelope'
      summary: Create a new user
      tags:
      - user
  /user/{id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: user deleted
          schema:
            $ref: '#/definitions/handler.MsgEnvelope'
        "400":
          description: bad request
          schema:
            $ref: '#/definitions/handler.ErrEnvelope'
        "401":
          description: missing or malformed jwt
          schema:
            $ref: '#/definitions/handler.ErrEnvelope'
        "404":
          description: user is not exist
          schema:
            $ref: '#/definitions/handler.ErrEnvelope'
        "500":
          description: internal server error
          schema:
            $ref: '#/definitions/handler.ErrEnvelope'
      security:
      - ApiKeyAuth: []
      summary: Delete user by id
      tags:
      - user
    get:
      consumes:
      - application/json
      description: Get user by id in query param
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "302":
          description: Found
          schema:
            $ref: '#/definitions/model.User'
        "400":
          description: bad request
          schema:
            $ref: '#/definitions/handler.ErrEnvelope'
        "401":
          description: missing or malformed jwt
          schema:
            $ref: '#/definitions/handler.ErrEnvelope'
        "404":
          description: user is not exist
          schema:
            $ref: '#/definitions/handler.ErrEnvelope'
        "500":
          description: internal server error
          schema:
            $ref: '#/definitions/handler.ErrEnvelope'
      security:
      - ApiKeyAuth: []
      summary: Get user by id
      tags:
      - user
    patch:
      consumes:
      - application/json
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      - description: User information
        in: body
        name: input
        schema:
          $ref: '#/definitions/model.UpdateUserRq'
      produces:
      - application/json
      responses:
        "200":
          description: user updated
          schema:
            $ref: '#/definitions/handler.MsgEnvelope'
        "400":
          description: bad request
          schema:
            $ref: '#/definitions/handler.ErrEnvelope'
        "401":
          description: missing or malformed jwt
          schema:
            $ref: '#/definitions/handler.ErrEnvelope'
        "404":
          description: user is not exist
          schema:
            $ref: '#/definitions/handler.ErrEnvelope'
        "409":
          description: edit conflict
          schema:
            $ref: '#/definitions/handler.ErrEnvelope'
        "500":
          description: internal server error
          schema:
            $ref: '#/definitions/handler.ErrEnvelope'
      security:
      - ApiKeyAuth: []
      summary: Update user by id
      tags:
      - user
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
